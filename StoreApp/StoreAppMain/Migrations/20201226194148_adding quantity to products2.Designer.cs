// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApp;

namespace StoreApp.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20201226194148_adding quantity to products2")]
    partial class addingquantitytoproducts2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("StoreApp.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerAge")
                        .HasColumnType("int");

                    b.Property<string>("CustomerFName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PerferedStoreStoreLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerID");

                    b.HasIndex("PerferedStoreStoreLocationId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("StoreApp.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("StoreApp.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAgeRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("StoreLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductID");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("StoreApp.StoreLocation", b =>
                {
                    b.Property<Guid>("StoreLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreLocationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreLocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreLocationId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("StoreApp.Customer", b =>
                {
                    b.HasOne("StoreApp.StoreLocation", "PerferedStore")
                        .WithMany("FrequentCustomers")
                        .HasForeignKey("PerferedStoreStoreLocationId");

                    b.Navigation("PerferedStore");
                });

            modelBuilder.Entity("StoreApp.Order", b =>
                {
                    b.HasOne("StoreApp.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("StoreApp.Product", b =>
                {
                    b.HasOne("StoreApp.StoreLocation", "StoreLocation")
                        .WithMany("Products")
                        .HasForeignKey("StoreLocationId");

                    b.Navigation("StoreLocation");
                });

            modelBuilder.Entity("StoreApp.StoreLocation", b =>
                {
                    b.Navigation("FrequentCustomers");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
